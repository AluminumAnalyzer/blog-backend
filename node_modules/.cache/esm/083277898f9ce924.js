let Router,postCtrl,checkLoggedIn;_8f9‍.x([["default",()=>_8f9‍.o]]);_8f9‍.w("koa-router",[["default",["Router"],function(v){Router=v}]]);_8f9‍.w("./posts.ctrl",[["*",null,function(v){postCtrl=v}]]);_8f9‍.w("../../lib/checkLoggedIn",[["default",["checkLoggedIn"],function(v){checkLoggedIn=v}]]);



const posts = new Router();

posts.get('/', postCtrl.list);
posts.post('/',checkLoggedIn, postCtrl.write);

const post = new Router(); // /api/posts/:id

// posts.get('/:id', postCtrl.getPostById, postCtrl.read);
// posts.delete('/:id', checkLoggedIn,postCtrl.checkOwnPost,  postCtrl.remove);
// posts.patch('/:id', checkLoggedIn, postCtrl.checkOwnPost, postCtrl.update);

// posts.use('/:id', postCtrl.getPostById, post.routes());

post.get('/', postCtrl.read);
post.delete('/', checkLoggedIn, postCtrl.checkOwnPost, postCtrl.remove);
post.patch('/', checkLoggedIn, postCtrl.checkOwnPost,  postCtrl.update);

posts.use('/:id',postCtrl.getPostById, post.route());


_8f9‍.d(posts);